{"version":3,"sources":["components/education.tsx","components/experience.tsx","components/header.tsx","components/skills.tsx","App.js","reportWebVitals.js","index.js"],"names":["EducationSection","renderedEducation","education","map","edu","className","institute","degree","subDegree","graduationDate","overallGpa","majorGpa","coursework","join","ExperienceSection","renderedExperiences","experiences","experience","company","jobTitle","startDate","endDate","location","bullets","bullet","handleDownloadClick","e","preventDefault","window","print","Header","resumeInfo","links","link","name","href","onClick","url","target","reduce","prev","curr","email","renderSkill","skill","items","renderedSubskills","subskill","SkillsSection","renderedSkills","skills","item","App","ResumeData","info","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.bc88dd7b.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Education } from './../models';\r\n\r\ninterface EducationProps {\r\n    education: Education[];\r\n};\r\n\r\nconst EducationSection = ({ education }: EducationProps) => {\r\n    const renderedEducation = education.map((edu: Education) =>\r\n        <li className=\"educationItem\" key={edu.institute}>\r\n            <div className=\"summary\">\r\n                <div className=\"info\">\r\n                    <h3>{edu.institute}</h3>\r\n                    <div>{edu.degree}</div>\r\n                    <div>{edu.subDegree}</div>\r\n                </div>\r\n                <div className=\"context\">\r\n                    <div className=\"when\">\r\n                        {edu.graduationDate}\r\n                    </div>\r\n                    {edu.overallGpa && \r\n                        <div className=\"gpa\">\r\n                            GPA: {edu.overallGpa}\r\n                        </div>\r\n                    }\r\n                    {edu.majorGpa && \r\n                        <div className=\"gpa\">\r\n                            Major GPA: {edu.majorGpa}\r\n                        </div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"coursework\">\r\n                <span className=\"title\">Related Coursework: </span>{edu.coursework.join(', ')}\r\n            </div>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <div className=\"education\">\r\n            <h2>Education</h2>\r\n            <ul className=\"educationList\">\r\n                {renderedEducation}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EducationSection;","import React from 'react';\r\nimport { Experience } from './../models';\r\n\r\ninterface ExperienceProps {\r\n    experiences: Experience[];\r\n};\r\n\r\nconst ExperienceSection = ({ experiences }: ExperienceProps) => {\r\n    const renderedExperiences = experiences.map((experience: Experience) =>\r\n        <li className=\"experienceItem\" key={experience.company}>\r\n            <div className=\"summary\">\r\n                <div className=\"info\">\r\n                    <h3>{experience.company}</h3>\r\n                    <h4>{experience.jobTitle}</h4>\r\n                </div>\r\n                <div className=\"context\">\r\n                    <div className=\"when\">\r\n                        {experience.startDate} &mdash; {experience.endDate}\r\n                    </div>\r\n                    <div className=\"where\">\r\n                        {experience.location}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <ul className=\"details\">\r\n                {experience.bullets.map((bullet) => {\r\n                    return <li key={bullet}>{bullet}</li>;\r\n                })}\r\n            </ul>\r\n        </li>\r\n    );\r\n\r\n    return (\r\n        <div className=\"experience\">\r\n            <h2>Experience</h2>\r\n            <ul className=\"experienceList\">\r\n                {renderedExperiences}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ExperienceSection;","import React from 'react';\r\nimport { ResumeInfo, SocialLink } from './../models';\r\n\r\nconst DOWNLOAD_KEYWORD = 'Download';\r\n\r\ninterface HeaderProps {\r\n    resumeInfo: ResumeInfo;\r\n};\r\n\r\nfunction handleDownloadClick(e: Event) {\r\n    e.preventDefault();\r\n    window.print();\r\n}\r\n\r\nconst Header = ({ resumeInfo }: HeaderProps) => {\r\n    const links = resumeInfo.links.map((link: SocialLink) =>\r\n        <span key={link.name}>\r\n            {(link.name) === DOWNLOAD_KEYWORD\r\n                /* intentionally using a href to simplify styling */\r\n                /* eslint-disable-next-line */\r\n                ? <a href=\"#\" onClick={handleDownloadClick}>Download</a>\r\n                : <a href={link.url} target='blank'>{link.name}</a>\r\n            }\r\n        </span>\r\n    ).reduce((prev, curr) => [prev, ' | ', curr]);\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"name\">\r\n                <h1>{resumeInfo.name}</h1>\r\n            </div>\r\n            <div className=\"links\">\r\n                <div className=\"email\">\r\n                    <a href={'mailto:' + resumeInfo.email}>\r\n                        {resumeInfo.email}\r\n                    </a>\r\n                </div>\r\n                <div className=\"other\">\r\n                    {links}\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport { Skill } from './../models';\r\n\r\ninterface SkillProps {\r\n    skills: Skill[];\r\n};\r\n\r\nfunction hasSubskills(input: Skill | string): input is Skill {\r\n    if ((input as Skill).items) {\r\n        return true;\r\n    } else {\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction renderSkill(skill: Skill | string) {\r\n    if (hasSubskills(skill)) {\r\n        const renderedSubskills = skill.items.map(\r\n            (subskill) => renderSkill(subskill)).join(', ');\r\n        return skill.name + ` (${renderedSubskills})`;\r\n    } else {\r\n        return skill;\r\n    }\r\n}\r\n\r\nconst SkillsSection = ({ skills }: SkillProps) => {\r\n    const renderedSkills = skills.map((skill: Skill) =>\r\n        <div className=\"category\" key={skill.name}>\r\n            <div className=\"categoryName\">\r\n                <h3>\r\n                    {skill.name}\r\n                </h3>\r\n            </div>\r\n            <div className=\"skills\">\r\n                {skill.items.map((item) => renderSkill(item)).join(', ')}\r\n            </div>\r\n        </div> \r\n    );\r\n\r\n    return (\r\n        <div className=\"skills\">\r\n            <h2>Skills</h2>\r\n            <div className=\"skillsList\">\r\n                {renderedSkills}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SkillsSection;","import EducationSection from './components/education';\nimport ExperienceSection from './components/experience';\nimport Header from './components/header';\nimport SkillsSection from './components/skills';\nimport ResumeData from './data.json';\nimport './App.scss';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"Resume\">\n        <Header resumeInfo={ResumeData.info} />\n        <main>\n          <ExperienceSection experiences={ResumeData.experience} />\n          <div className=\"sidebar\">\n            <SkillsSection skills={ResumeData.skills} />\n            <div className=\"spacer\" />\n            <EducationSection education={ResumeData.education} />\n          </div>\n        </main>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}